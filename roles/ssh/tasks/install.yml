---
- name: Include OS-specific tasks
  ansible.builtin.include_tasks: '{{ lookup("ansible.builtin.first_found", params) }}'
  vars:
    params:
      files:
        - '{{ _target }}.{{ ansible_distribution | lower }}.yml'
        - '{{ _target }}.{{ ansible_os_family | lower }}.yml'
      paths:
        - .

- name: Ensure the ssh directory for root is present
  ansible.builtin.file:
    path: '{{ ssh_root_dir }}'
    state: directory
    owner: root
    group: root
    mode: '0700'

- name: Deploy authorized keys for root
  ansible.builtin.template:
    src: authorized_keys.j2
    dest: '{{ ssh_root_dir }}/{{ ssh_authorized_keys_file }}'
    owner: root
    group: root
    mode: '0600'

- name: Ensure the ssh config directory is present
  ansible.builtin.file:
    path: '{{ ssh_config_dir }}'
    state: directory
    owner: root
    group: root
    mode: '0755'

- name: Set PasswordAuthentication to `yes` when `ssh_public_keys` is empty
  ansible.builtin.set_fact:
    ssh_options: '{{ ssh_options | combine({"PasswordAuthentication": "yes"}) }}'
  when: ssh_public_keys | length == 0

- name: Write ssh config file
  ansible.builtin.template:
    src: 'sshd_config.j2'
    dest: '{{ ssh_config_dir }}/{{ ssh_server_config_file }}'
    owner: root
    group: root
    mode: '0644'
  notify: reload ssh

- name: Ensure the ssh server is enabled and running
  ansible.builtin.service:
    name: '{{ ssh_service }}'
    state: started
    enabled: true
