# {{ ansible_managed }}
---
global:
  # How frequently to scrape targets by default.
  scrape_interval:          {{ a_loki__prometheus_scrape_interval | default('1m') }}

  # How long until a scrape request times out.
  scrape_timeout:           {{ a_loki__prometheus_scrape_timeout | default('10s') }}

  # How frequently to evaluate rules.
  evaluation_interval:      {{ a_loki__prometheus_evaluation_interval | default('1m') }}

  # File to which PromQL queries are logged.
  # Reloading the configuration will reopen the file.
  query_log_file:           {{ a_loki__prometheus_query_log_file | default('') }}

  # An uncompressed response body larger than this many bytes will cause the
  # scrape to fail. 0 means no limit. Example: 100MB.
  # This is an experimental feature, this behaviour could
  # change or be removed in the future.
  body_size_limit:          {{ a_loki__prometheus_body_size_limit | default('0') }}

  # Per-scrape limit on number of scraped samples that will be accepted.
  # If more than this number of samples are present after metric relabeling
  # the entire scrape will be treated as failed. 0 means no limit.
  sample_limit:             {{ a_loki__prometheus_sample_limit | default('0') }}

  # Per-scrape limit on number of labels that will be accepted for a sample. If
  # more than this number of labels are present post metric-relabeling, the
  # entire scrape will be treated as failed. 0 means no limit.
  label_limit:              {{ a_loki__prometheus_label_limit | default('0') }}

  # Per-scrape limit on length of labels name that will be accepted for a sample.
  # If a label name is longer than this number post metric-relabeling, the entire
  # scrape will be treated as failed. 0 means no limit.
  label_name_length_limit:  {{ a_loki__prometheus_label_name_length_limit | default('0') }}

  # Per-scrape limit on length of labels value that will be accepted for a sample.
  # If a label value is longer than this number post metric-relabeling, the
  # entire scrape will be treated as failed. 0 means no limit.
  label_value_length_limit: {{ a_loki__prometheus_label_value_length_limit | default('0') }}

  # Per-scrape config limit on number of unique targets that will be
  # accepted. If more than this number of targets are present after target
  # relabeling, Prometheus will mark the targets as failed without scraping them.
  # 0 means no limit. This is an experimental feature, this behaviour could
  # change in the future.
  target_limit:             {{ a_loki__prometheus_target_limit | default('0') }}

  # Limit per scrape config on the number of targets dropped by relabeling
  # that will be kept in memory. 0 means no limit.
  keep_dropped_targets:     {{ a_loki__prometheus_keep_dropped_targets | default('0') }}


scrape_configs:
  - job_name: docker
    scheme: http
    metrics_path: /metrics
    static_configs:
      - targets:
          - 172.17.0.1:9090
  - job_name: loki
    scheme: http
    metrics_path: /metrics
    static_configs:
      - targets:
          - loki:3100
  - job_name: prometheus
    scheme: http
    metrics_path: /metrics
    static_configs:
      - targets:
          - 127.0.0.1:9090
